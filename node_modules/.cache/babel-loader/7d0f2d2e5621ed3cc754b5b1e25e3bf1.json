{"ast":null,"code":"var _jsxFileName = \"/Users/bryan/Desktop/Garuda Hacks 2020/demo-app/src/App.js\";\nimport React, { Component } from 'react';\nimport { withStyles, fade } from '@material-ui/core/styles';\nimport logo from \"./logo.svg\";\nimport Counter from './Counter';\nimport Journal from './Journal';\nimport './App.css';\nconst styles = {\n  App: {\n    backgroundColor: \"teal\",\n    height: \"100vh\",\n    textAlign: \"center\"\n  },\n  journalList: {\n    display: \"flex\",\n    width: \"1400px\",\n    flexWrap: \"wrap\",\n    margin: \"auto\"\n  },\n  journalBox: {\n    backgroundColor: \"purple\",\n    margin: \"20px\",\n    border: \"3px solid orange\",\n    height: \"300px\",\n    width: \"300px\"\n  }\n};\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    const savedJournals = JSON.parse(window.localStorage.getItem(\"journals\")); // get the previously saved file of \"journals\"\n\n    this.state = {\n      journals: savedJournals || []\n    };\n    this.saveJournal = this.saveJournal.bind(this);\n  }\n\n  saveJournal(newJournal) {\n    this.setState({\n      journals: [...this.state.journals, newJournal]\n    }, this.syncLocalStorage, function () {\n      console.log(this.state.journals);\n    }); // ... is for appending the previous items in the array\n  }\n\n  syncLocalStorage() {\n    window.localStorage.setItem(\"journals\", JSON.stringify(this.state.journals)); // update the \"journals\" file, uses stringify since JSON does not accept any type other than strings.\n  }\n\n  render() {\n    const {\n      classes\n    } = this.props;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: classes.App,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Journal, {\n      addNewJournal: this.saveJournal,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: classes.journalList,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 11\n      }\n    }, this.state.journals.map(journal =>\n    /*#__PURE__*/\n    // 'journal => (codes)' means that for every journal, it does this code.\n    React.createElement(\"div\", {\n      className: classes.journalBox,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 17\n      }\n    }, \"Journal\"), /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 17\n      }\n    }, \"date: \", journal.date), /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 17\n      }\n    }, \"highlights: \", journal.highlights), /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 17\n      }\n    }, \"mood: \", journal.mood)))));\n  }\n\n}\n\nexport default withStyles(styles)(App);","map":{"version":3,"sources":["/Users/bryan/Desktop/Garuda Hacks 2020/demo-app/src/App.js"],"names":["React","Component","withStyles","fade","Counter","Journal","styles","App","backgroundColor","height","textAlign","journalList","display","width","flexWrap","margin","journalBox","border","constructor","props","savedJournals","JSON","parse","window","localStorage","getItem","state","journals","saveJournal","bind","newJournal","setState","syncLocalStorage","console","log","setItem","stringify","render","classes","map","journal","date","highlights","mood"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport {withStyles, fade} from '@material-ui/core/styles';\nimport logo from './logo.svg';\nimport Counter from './Counter';\nimport Journal from './Journal'; \nimport './App.css';\n\nconst styles = {\n  App: {\n    backgroundColor: \"teal\",\n    height: \"100vh\",\n    textAlign: \"center\"\n  },\n  journalList: {\n    display: \"flex\",\n    width: \"1400px\",\n    flexWrap: \"wrap\",\n    margin: \"auto\"\n  },\n\n  journalBox: {\n    backgroundColor: \"purple\",\n    margin: \"20px\",\n    border: \"3px solid orange\",\n    height: \"300px\",\n    width: \"300px\"\n  }\n}\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    const savedJournals = JSON.parse(window.localStorage.getItem(\"journals\")) // get the previously saved file of \"journals\"\n    this.state = {\n        journals: savedJournals || []\n    }\n    this.saveJournal = this.saveJournal.bind(this);\n}\n  saveJournal(newJournal){\n    this.setState({journals: [...this.state.journals, newJournal]}, this.syncLocalStorage, function(){\n      console.log(this.state.journals);\n    }) // ... is for appending the previous items in the array\n}\n  syncLocalStorage(){\n    window.localStorage.setItem(\"journals\", JSON.stringify(this.state.journals)) // update the \"journals\" file, uses stringify since JSON does not accept any type other than strings.\n}\n  render() {\n    const {classes} = this.props;\n    return (\n        <div className={classes.App}>\n          {/*<Counter count = {1} name = \"Chrisbry\"/>*/}\n          <Journal addNewJournal={this.saveJournal}/>\n          <div className={classes.journalList}>\n            {this.state.journals.map(journal => ( // 'journal => (codes)' means that for every journal, it does this code.\n              <div className= {classes.journalBox}>\n                <h1>Journal</h1>\n                <h3>date: {journal.date}</h3>\n                <h3>highlights: {journal.highlights}</h3>\n                <h3>mood: {journal.mood}</h3>\n                </div>\n            ))}\n          </div>\n        </div>\n      );\n    }\n\n}\nexport default withStyles(styles)(App);"]},"metadata":{},"sourceType":"module"}